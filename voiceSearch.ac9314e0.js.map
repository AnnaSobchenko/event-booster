{"version":3,"sources":["js/voiceSearch.js"],"names":["searchForm","document","querySelector","searchDiv","searchFormInput","info","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","lang","insertAdjacentHTML","style","paddingRight","micBtn","micIcon","firstElementChild","micBtnClick","classList","contains","start","stop","startSpeechRecognition","remove","add","focus","endSpeechRecognition","resultOfSpeechRecognition","event","current","resultIndex","transcript","results","toLowerCase","trim","value","submit","addEventListener","console","log"],"mappings":";AAAA,MAAMA,EAAaC,SAASC,cAAc,gBACpCC,EAAYF,SAASC,cAAc,cACnCE,EAAkBJ,EAAWE,cAAc,iBAC3CG,EAAOJ,SAASC,cAAc,SAG9BI,EAAoBC,OAAOD,mBAAqBC,OAAOC,wBAE7D,GAAIF,EAAmB,CAEfG,MAAAA,EAAc,IAAIH,EACxBG,EAAYC,YAAa,EACzBD,EAAYE,KAAO,QAEnBR,EAAUS,mBACR,aACA,oEAEFR,EAAgBS,MAAMC,aAAe,OAE/BC,MAAAA,EAASZ,EAAUD,cAAc,UACjCc,EAAUD,EAAOE,kBAGdC,SAAAA,IACHF,EAAQG,UAAUC,SAAS,iBAE7BX,EAAYY,QAEZZ,EAAYa,OAKPC,SAAAA,IACPP,EAAQG,UAAUK,OAAO,iBACzBR,EAAQG,UAAUM,IAAI,uBACtBrB,EAAgBsB,QAKTC,SAAAA,IACPX,EAAQG,UAAUK,OAAO,uBACzBR,EAAQG,UAAUM,IAAI,iBACtBrB,EAAgBsB,QAKTE,SAAAA,EAA0BC,GAC3BC,MAAAA,EAAUD,EAAME,YAChBC,EAAaH,EAAMI,QAAQH,GAAS,GAAGE,WAEL,mBAApCA,EAAWE,cAAcC,OAC3B1B,EAAYa,OACFlB,EAAgBgC,MAGc,OAApCJ,EAAWE,cAAcC,OAC3BhC,EAAUkC,SACmC,gBAApCL,EAAWE,cAAcC,OAClC/B,EAAgBgC,MAAQ,GAExBhC,EAAgBgC,MAAQJ,EAP1B5B,EAAgBgC,MAAQJ,EAlC5BjB,EAAOuB,iBAAiB,QAASpB,GAUjCT,EAAY6B,iBAAiB,QAASf,GAQtCd,EAAY6B,iBAAiB,MAAOX,GAQpClB,EAAY6B,iBAAiB,SAAUV,QAyBvCW,QAAQC,IAAI","file":"voiceSearch.ac9314e0.js","sourceRoot":"../src","sourcesContent":["const searchForm = document.querySelector('.search-form');\nconst searchDiv = document.querySelector('#form-icon');\nconst searchFormInput = searchForm.querySelector('.search-input');\nconst info = document.querySelector('.info');\n\n// The speech recognition interface lives on the browserâ€™s window object\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition; // if none exists -> undefined\n\nif (SpeechRecognition) {\n  \n  const recognition = new SpeechRecognition();\n  recognition.continuous = true;\n  recognition.lang = 'en-US';\n\n  searchDiv.insertAdjacentHTML(\n    'afterbegin',\n    '<button type=\"button\"><i class=\"fas fa-microphone\"></i></button>',\n  );\n  searchFormInput.style.paddingRight = '50px';\n\n  const micBtn = searchDiv.querySelector('button');\n  const micIcon = micBtn.firstElementChild;\n\n  micBtn.addEventListener('click', micBtnClick);\n  function micBtnClick() {\n    if (micIcon.classList.contains('fa-microphone')) {\n      // Start Voice Recognition\n      recognition.start();\n    } else {\n      recognition.stop();\n    }\n  }\n\n  recognition.addEventListener('start', startSpeechRecognition); // <=> recognition.onstart = function() {...}\n  function startSpeechRecognition() {\n    micIcon.classList.remove('fa-microphone');\n    micIcon.classList.add('fa-microphone-slash');\n    searchFormInput.focus();\n    // console.log(\"Voice activated, SPEAK\");\n  }\n\n  recognition.addEventListener('end', endSpeechRecognition); // <=> recognition.onend = function() {...}\n  function endSpeechRecognition() {\n    micIcon.classList.remove('fa-microphone-slash');\n    micIcon.classList.add('fa-microphone');\n    searchFormInput.focus();\n    // console.log(\"Speech recognition service disconnected\");\n  }\n\n  recognition.addEventListener('result', resultOfSpeechRecognition); // <=> recognition.onresult = function(event) {...} - Fires when you stop talking\n  function resultOfSpeechRecognition(event) {\n    const current = event.resultIndex;\n    const transcript = event.results[current][0].transcript;\n\n    if (transcript.toLowerCase().trim() === 'stop recording') {\n      recognition.stop();\n    } else if (!searchFormInput.value) {\n      searchFormInput.value = transcript;\n    } else {\n      if (transcript.toLowerCase().trim() === 'go') {\n        searchDiv.submit();\n      } else if (transcript.toLowerCase().trim() === 'reset input') {\n        searchFormInput.value = '';\n      } else {\n        searchFormInput.value = transcript;\n      }\n    }\n    // searchFormInput.value = transcript;\n    // searchFormInput.focus();\n    // setTimeout(() => {\n    //   searchForm.submit();\n    // }, 500);\n  }\n} else {\n  console.log('Your Browser does not support speech Recognition');\n  // info.textContent = \"Your Browser does not support Speech Recognition\";\n}\n"]}